"""Initial migration

Revision ID: c43118116adb
Revises: 
Create Date: 2025-03-13 16:19:09.367640

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c43118116adb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('linkedin_pages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index(op.f('ix_linkedin_pages_id'), 'linkedin_pages', ['id'], unique=False)
    op.create_table('linkedin_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('page_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['page_id'], ['linkedin_pages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_linkedin_posts_id'), 'linkedin_posts', ['id'], unique=False)
    op.create_table('linkedin_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['linkedin_posts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_linkedin_comments_id'), 'linkedin_comments', ['id'], unique=False)
    op.drop_table('post')
    op.drop_table('comment')
    op.drop_table('linkedinpage')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('linkedinpage',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('linkedinpage_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('followers_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='linkedinpage_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('comment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('author', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], name='comment_post_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='comment_pkey')
    )

    # Drop foreign key constraint before dropping the 'post' table
    op.drop_constraint('comment_post_id_fkey', 'comment', type_='foreignkey')

    op.create_table('post',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('linkedinpage_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('likes_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('comments_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['linkedinpage_id'], ['linkedinpage.id'], name='post_linkedinpage_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='post_pkey')
    )

    op.drop_index(op.f('ix_linkedin_comments_id'), table_name='linkedin_comments')
    op.drop_table('linkedin_comments')
    op.drop_index(op.f('ix_linkedin_posts_id'), table_name='linkedin_posts')
    op.drop_table('linkedin_posts')
    op.drop_index(op.f('ix_linkedin_pages_id'), table_name='linkedin_pages')
    op.drop_table('linkedin_pages')
    op.drop_table('post')  # Drop the 'post' table after the foreign key constraint is removed
    # ### end Alembic commands ###
